[tool.poetry]
name = "async-pynamodb"
version = "0.1.0"
description = "A Pythonic interface for Amazon's DynamoDB with AsyncIO Support"
authors = ["Jharrod LaFon <jlafon@eyesopen.com>", "Guilherme Scaranse <guiscaranse@gmail.com>"]
license = "MIT"
readme = "README.rst"

[tool.poetry.dependencies]
python = "~3.11"
blinker = { version = ">=1.3,<2.0", optional = true }
asyncio = { version = "^3.4.3", optional = true }
aioboto3 = { version = "^13.4.0", optional = true }
aioitertools = { version = "^0.12.0", optional = true }

[tool.poetry.extras]
signals = ["blinker"]
asyncio = ["asyncio", "aioboto3", "aioitertools"]

[tool.poetry.group.test.dependencies]
pytest = "^8.3.4"
pytest-env = "^1.1.5"
pytest-mock = "^3.14.0"
freezegun = "^1.5.1"
pytest-asyncio = "^0.25.3"


[tool.poetry.group.dev.dependencies]
types-aioboto3 = {extras = ["dynamodb"], version = "^13.4.0"}
mypy = "^1.15.0"
ruff = "^0.9.6"

[tool.ruff]
include = ["pyproject.toml", "pynamodb/**/*.py"]

[tool.ruff.lint.per-file-ignores]
"*.py" = ["E721"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
