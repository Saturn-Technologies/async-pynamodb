name: Tests

on:
  push:
    branches: [master]
  pull_request:

jobs:
  test:

    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      uses: abatilo/actions-poetry@v4
    - name: Setup a local virtual environment (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
    - uses: actions/cache@v3
      name: Define a cache for the virtual environment based on the dependencies lock file
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}

    - name: Install the project dependencies
      run: poetry install -n --all-extras --with test --with dev

    - name: Run dynamodb_local
      run: |
        wget --quiet http://dynamodb-local.s3-website-us-west-2.amazonaws.com/dynamodb_local_latest.tar.gz -O /tmp/dynamodb_local_latest.tar.gz
        tar -xzf /tmp/dynamodb_local_latest.tar.gz -C /tmp
        java -Djava.library.path=/tmp/DynamoDBLocal_lib -jar /tmp/DynamoDBLocal.jar -inMemory -port 8000 &

    - name: Run tests
      run: poetry run pytest tests

  mypy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
    - name: Install poetry
      uses: abatilo/actions-poetry@v4
    - name: Setup a local virtual environment (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
    - uses: actions/cache@v3
      name: Define a cache for the virtual environment based on the dependencies lock file
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}
    - name: Install the project dependencies
      run: poetry install -n --all-extras --with test --with dev
    - name: Run mypy
      run: poetry run mypy --config-file mypy.ini pynamodb
    - name: Run flake8 async rules
      run: poetry run flake8 --select=ASYNC pynamodb
